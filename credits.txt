Credits and stuff

Things that I implemented/thought of completly on my own are listed below
  - The virtual leaderboard system
  - The virtual gun system
  - Radar code, except for how it actually locks the rotation
  - Linear Gun
  - Head on gun
  - Painting (debug info)
  - Pattern gun (gets used the most, the guess factor gun doesn't use enough parameters)
  - Anti gravity movement
  - Themer
  - How it picks targets
  - Component system
  - The following python tools: filestats, package, compile, clean


Note: lots of the math was borrowed from the internet because math is hard and we haven't 
      been taught the stuff I actually want to use. That being said I still have a rough
      idea of how it works and I know why it's used.

      So I will be able to explain everything in this robot save for possibly exactly what some
      math does. Although having said that, given 10-15ish minutes with Google I could tell you
      more in depth what it does. I just don't see a practical reason trying to cram memorize it, *right now*.
      (this isn't a math class after all).

Things that I used external insperation for are listed below, along with any
changes I implemented.
(Will update this when I'm done (If i dont forget)) otherwise the links *should* be everything needed

Links
https://robowiki.net/wiki/HawkOnFire
https://robowiki.net/wiki/Wave_Surfing_Tutorial
https://robowiki.net/wiki/GuessFactor_Targeting_Tutorial
https://robowiki.net/wiki/Pattern_Matching
https://robowiki.net/wiki/Wall_Smoothing
https://robowiki.net/wiki/Virtual_Guns
https://robowiki.net/wiki/Anti-Gravity_Tutorial
https://robowiki.net/wiki/Bin_Smoothing
https://robowiki.net/wiki/Radar
https://robowiki.net/wiki/Performance_Enhancing_Bug (I have mixed feelings about this)
https://github.com/Voidious/Diamond (Got the idea of how to split up files from his bot)
https://robowiki.net/wiki/Category:Terminology
https://robowiki.net/wiki/Assertive

Basically the whole robowiki website


To Do List

for (i : 0 to 100)
  i+1. Make the bot be able to do mirror movement for fun
  i+1. Finding out how to use a K-D tree would be awsome but probably outside my current abilities
    simply because I don't know enough about how they work. It might be something worth putting into
    a whole new robot. But idk yet.
  i+1. Move files off into their own folders like (movement, guns, etc).
    - I need to figure out how to make the compiler work with this first
  i+1. Change component registering into a list


Changelog I guess

[11/24/22] current_version = v1.4
  - Made a Component system to make it easier/more readable
  - Changed some components over to the new componentcore

[11/25/22] current_version = v1.4
  - Made a packaging tool so now the robocode editor is not needed for anything
    It should be noted though that for some reason the resulting jar file is 2x the size of the
      robocode editor version. I'm not sure why this is but it's not a big deal.
      
  - I moved all the tools into their own folder and made a singular batch file 'robo.bat' to run them
  - Add execution conditionals to the Component system
  - Changed everything over to the new component system
     Note radar can still be accessed via alphabet.radar because I didn't want to change it in
     nearly every file to ((Radar) alphabet.componentCore.getComponent("radar"))
  - Attempted to get the shadow gun target selection working.
    I was able to get it working but this robot wasn't programmed
    with target selection in mind so it doesn't integrate well.
    I think with some changes it could work but I'm not sure and
    I'm getting great results with the current target selection.